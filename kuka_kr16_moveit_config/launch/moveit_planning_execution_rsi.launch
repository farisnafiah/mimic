<launch>
  <!-- A convenience launch file that launches all of the required nodes to
       plan and execute motions using RViz, MoveIt and the ros_control based
       KUKA RSI driver from the kuka_rsi_hw_interface package.
  -->
 
  <!-- Non-standard joint names -->
  <rosparam command="load" file="$(find kuka_kr16_support)/config/joint_names_kr16.yaml" />
  <rosparam file="$(find mimic_driver)/config/rsi_master_params_sim.yaml" command="load"/>

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find kuka_kr16_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <rosparam subst_value="true">
    joint_state_controller:
      type: joint_state_controller/JointStateController
      publish_rate: 50

    # NOTE: these joint names MUST correspond to those specified in the
    #       'controller_joint_names' parameter (typically loaded by the
    #       calling launch file)
    position_trajectory_controller:
      type: "position_controllers/JointTrajectoryController"
      joints:
        - joint_a1
        - joint_a2
        - joint_a3
        - joint_a4
        - joint_a5
        - joint_a6

      state_publish_rate: 50 # Defaults to 50
      action_monitor_rate: 20 # Defaults to 20
  </rosparam>

  <!-- run the robot simulator and action interface nodes -->
  <!-- <group>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group> -->
  <!-- run the "real robot" interface nodes -->
  <!-- <include file="$(find kuka_rsi_hw_interface)/launch/robot_interface_streaming.launch" >
    <arg name="robot_ip" value="127.0.0.1"/>
  </include> -->

  <!-- main 'driver node': the RSI hardware interface -->
  <!-- main 'driver node': the RSI hardware interface -->
  <node name="kuka_hardware_interface" pkg="kuka_rsi_hw_interface" type="kuka_hardware_interface_node" respawn="false">
    <!-- remap topics to conform to ROS-I specifications -->
    <remap from="position_trajectory_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
    <remap from="position_trajectory_controller/state" to="/feedback_states" />
    <remap from="position_trajectory_controller/command" to="/joint_path_command"/>
  </node>

  <!-- spawn the actual controllers: note that the names of the controllers must
       correspond to those specified in the rosparam snippet above -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="position_trajectory_controller joint_state_controller --shutdown-timeout 1"
    respawn="false" output="screen" />
  

  <param name="ndof" type="int" value="6"/>


  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find kuka_kr16_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(dirname)/moveit_rviz.launch">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
  </include>

</launch>
