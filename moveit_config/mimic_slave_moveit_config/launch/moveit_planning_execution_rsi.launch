<launch>
  <!-- A convenience launch file that launches all of the required nodes to
       plan and execute motions using RViz, MoveIt and the ros_control based
       KUKA RSI driver from the kuka_rsi_hw_interface package.
  --> 
  <!-- Based on this repo: https://github.com/gavanderhoorn/kuka_experimental/tree/kr6r900sixx_moveit_rsi_convenience/kuka_kr6r900sixx_moveit_config -->
  <!-- Non-standard joint names -->
  

  <arg name="sim" default="true" />

  <!-- Load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find mimic_slave_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>
  <!-- Load robot description from URDF file to parameter server -->
  <!-- <param name="/robot_description" command="$(find xacro)/xacro '$(find mimic_support)/urdf/mimic_slave.xacro'" /> -->

  <rosparam file="$(find mimic_driver)/config/rsi_slave_params_sim.yaml" command="load" if="$(arg sim)"/>
  <rosparam file="$(find mimic_driver)/config/rsi_slave_params.yaml" command="load" unless="$(arg sim)"/>

  <!-- Start node without FT sensor -->
  <node name="kuka_hardware_interface" pkg="kuka_rsi_hw_interface" type="kuka_hardware_interface_node" 
    respawn="false" output="screen" required="true">
    <!-- remap topics to conform to ROS-I specifications -->
    <!-- <remap from="position_trajectory_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
    <remap from="position_trajectory_controller/state" to="/feedback_states" />
    <remap from="position_trajectory_controller/command" to="/joint_path_command"/> -->
  </node>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find mimic_driver)/config/hardware_controllers_slave.yaml" command="load"/>
  <!-- Load standard kuka controller joint names from YAML file to parameter server -->
  <rosparam file="$(find mimic_driver)/config/controller_joint_names_slave.yaml" command="load"/>

  <!-- Load controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
      args="manipulator_position_trajectory_controller gantry_position_trajectory_controller joint_state_controller --shutdown-timeout 1"/>
  <!-- Load robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Load RSI simulation node -->
  <node name='kuka_rsi_simulator' pkg='kuka_rsi_simulator' type="kuka_rsi_simulator" args="127.0.0.1 49152" if="$(arg sim)" output="screen">
    <!-- <param name="initial_joints" value="[0, -90, 90, -90, 0, 0]"/>
    <param name="initial_ext_axis" value="[1000, 1850, 1900, 0, 0, 0]"/> -->
    <param name="initial_joints" value="[-77.71, -116.99, 105.18, -226.06, 70.87, 116.10]"/>
    <param name="initial_ext_axis" value="[1109.18, 2249.99, 1701.00, 0, 0, 0]"/>
  </node>



  <include file="$(find mimic_slave_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>


  <include file="$(dirname)/moveit_rviz.launch">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
  </include>



</launch>
